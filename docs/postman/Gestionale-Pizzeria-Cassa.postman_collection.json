{
  "info": {
    "name": "Gestionale Pizzeria - Cassa (MVP)",
    "_postman_id": "3ae05a5a-cd5c-48ce-810f-12aaed63efda",
    "description": "Postman collection per l'MVP API-first (solo Cassa).\n\nConvenzioni:\n- Autenticazione: Bearer {{token}}\n- Base URL configurabile via variabile `base_url` (default: http://localhost:8080)\n- Tutti gli endpoint sono sotto `/api/*`\n\nFlussi principali inclusi:\n- Auth: login/me/logout\n- Products: CRUD completo\n- Orders: creazione (unpaid/paid) + totale\n- Receipts: JSON e PDF (ricevuta di cortesia)\n\nNote:\n- Dopo il login, il token viene salvato automaticamente come variabile di collezione.\n- Per concatenare richieste, alcune risposte salvano `last_product_id` e `last_order_id` come variabili di collezione.\n- Aggiorna `{{product_id}}` e `{{order_id}}` quando necessario, oppure usa le variabili salvate.\n",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "product_id",
      "value": "1",
      "type": "string"
    },
    {
      "key": "order_id",
      "value": "1",
      "type": "string"
    },
    {
      "key": "last_product_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "last_order_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"password\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Basic status assertions",
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Save token (supports several key names) to collection variable",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) {}",
                  "const token = json.token || (json.data && (json.data.token || json.data.access_token)) || json.access_token;",
                  "pm.test('Token present in response', function () {",
                  "  pm.expect(token).to.be.a('string');",
                  "});",
                  "pm.collectionVariables.set('token', token);"
                ]
              }
            }
          ]
        },
        {
          "name": "Me",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "me"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Basic status assertions",
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "auth",
                "logout"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Basic status assertions",
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "List Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "products"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Basic status assertions",
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Show Product",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "products",
                "{{product_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Basic status assertions",
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "products"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Margherita\",\n  \"price\": 6.5,\n  \"category_id\": 1,\n  \"stock\": 100\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "// Store an id from response JSON for later chained requests",
                  "let data = {};",
                  "try { data = pm.response.json(); } catch (e) {}",
                  "const id = data.id;",
                  "if (id) {",
                  "  pm.collectionVariables.set('last_product_id', id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "products",
                "{{product_id}}"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Margherita (L)\",\n  \"price\": 7.5,\n  \"category_id\": 1,\n  \"stock\": 90\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Basic status assertions",
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "products",
                "{{product_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 204', function () { pm.response.to.have.status(204); });"
                ]
              }
            }
          ]
        }
      ],
      "auth": {
        "type": "inherit"
      }
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "List Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Basic status assertions",
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Show Order",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders",
                "{{order_id}}"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Basic status assertions",
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Order (UNPAID)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"sale\",\n  \"items\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 2\n    },\n    {\n      \"product_id\": 2,\n      \"quantity\": 1\n    }\n  ],\n  \"payment\": {\n    \"pay_now\": false\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "// Store an id from response JSON for later chained requests",
                  "let data = {};",
                  "try { data = pm.response.json(); } catch (e) {}",
                  "const id = data.id;",
                  "if (id) {",
                  "  pm.collectionVariables.set('last_order_id', id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Order (PAID + Receipt)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"sale\",\n  \"items\": [\n    {\n      \"product_id\": 1,\n      \"quantity\": 1\n    },\n    {\n      \"product_id\": 3,\n      \"quantity\": 2\n    }\n  ],\n  \"payment\": {\n    \"pay_now\": true,\n    \"method\": \"cash\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "// Store an id from response JSON for later chained requests",
                  "let data = {};",
                  "try { data = pm.response.json(); } catch (e) {}",
                  "const id = data.id;",
                  "if (id) {",
                  "  pm.collectionVariables.set('last_order_id', id);",
                  "}"
                ]
              }
            }
          ]
        }
      ],
      "auth": {
        "type": "inherit"
      }
    },
    {
      "name": "Receipts",
      "item": [
        {
          "name": "Get Receipt (JSON) by Order",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}/receipt",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders",
                "{{order_id}}",
                "receipt"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Basic status assertions",
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Download Receipt (PDF) by Order",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/pdf"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/orders/{{order_id}}/receipt/pdf",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "orders",
                "{{order_id}}",
                "receipt",
                "pdf"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "pm.test('Is PDF', function () { pm.expect(pm.response.headers.get('Content-Type')).to.include('application/pdf'); });"
                ]
              }
            }
          ],
          "response": []
        }
      ],
      "auth": {
        "type": "inherit"
      }
    }
  ]
}